// C++ program to demonstrate use of foreach for array
#include <iostream>
using namespace std;
 
int main()
{
    int arr[] = { 10, 20, 30, 40 };
 
    // Printing elements of an array using
    // foreach loop
    // Here, int is the data type, x is the variable name
    // and arr is the array for which we want to iterate foreach
      cout<<"Traversing the array with foreach using array's data type: ";
    for (int x : arr)
        cout<<x<<" ";
       
      // data type of x is set as int
    cout<<"\nTraversing the array with foreach using auto keyword     : ";
      for (auto x : arr)
      cout<<x<<" ";
}
#include <iostream>
#include <vector>
using namespace std;
 
int main()
{
 
    vector<string> value{ "This",    "is",    "foreach",
                          "example", "using", "vector." };
 
    cout << "Traversing the vector with foreach using "
            "vector's data type: ";
 
    for (string v : value) {
        cout << v << " ";
    }
 
    cout << "\nTraversing the vector with foreach using "
            "auto keyword      : ";
 
    for (auto v : value)
        cout << v << " ";
 
    return 0;
}
#include <iostream>
#include <set>
using namespace std;
 
int main() {
 
    set<int> value = {6, 2, 7, 4, 10, 5, 1};
   
    cout<<"Traversing the set with foreach using set's data type: ";
      for (int v : value) {
        cout<<v<<" ";
    }
   
    cout<<"\nTraversing the set with foreach using auto keyword   : ";
      for (auto v : value)
      cout<<v<<" ";
   
    return 0;
}
#include <iostream>
#include <map>
using namespace std;
 
int main() {
 
      map<int, string> mapExample;
    mapExample.insert(pair<int, string>(1, "Geeks"));
    mapExample.insert(pair<int, string>(2, "4"));
    mapExample.insert(pair<int, string>(3, "Geeks"));
    mapExample.insert(pair<int, string>(4, "Map"));
      mapExample.insert(pair<int, string>(5, "Foreach"));
    mapExample.insert(pair<int, string>(6, "Example"));
   
    cout<<"Traversing the map with foreach using map's data type\n";
      for (pair<int, string> mpEx : mapExample ) {
        cout<<mpEx.first<<" "<<mpEx.second<<endl;
    }
   
    cout<<"\nTraversing the map with foreach using auto keyword\n";
      for (auto mpEx : mapExample){
        cout<<mpEx.first<<" "<<mpEx.second<<endl;
    }
   
    return 0;
}

