// C++ program to illustrate the 
// unordered_set::load_factor() function 
#include <iostream> 
#include <unordered_set> 

using namespace std; 
 

int main() 
{ 
 

    // declaration 

    unordered_set<int> sample; 
 

    // inserts element 

    sample.insert(1); 

    sample.insert(11); 

    sample.insert(111); 

    sample.insert(12); 

    sample.insert(13); 
 

    cout << "The size is: " << sample.size(); 

    cout << "\nThe bucket_count is: "

        << sample.bucket_count(); 
 

    cout << "\nThe load_factor is: "

        << sample.load_factor(); 
 

    sample.insert(2); 

    sample.insert(22); 
 

    cout << "\n\nThe size is: "

        << sample.size(); 
 

    cout << "\nThe bucket_count is: "

        << sample.bucket_count(); 
 

    cout << "\nThe load_factor is: "

        << sample.load_factor(); 
 

    sample.insert(33); 
 

    cout << "\n\nThe size is: "

        << sample.size(); 
 

    cout << "\nThe bucket_count is: "

        << sample.bucket_count(); 
 

    cout << "\nThe load_factor is: "

        << sample.load_factor(); 

    return 0; 
} 
// C++ program to illustrate the 
// unordered_set::load_factor() function 
#include <iostream> 
#include <unordered_set> 

using namespace std; 
 

int main() 
{ 
 

    // declaration 

    unordered_set<char> sample; 
 

    // inserts element 

    sample.insert('a'); 

    sample.insert('b'); 

    sample.insert('c'); 

    sample.insert('r'); 

    sample.insert('d'); 
 

    cout << "The size is: " << sample.size(); 

    cout << "\nThe bucket_count is: "

        << sample.bucket_count(); 
 

    cout << "\nThe load_factor is: "

        << sample.load_factor(); 
 

    sample.insert('f'); 

    sample.insert('k'); 
 

    cout << "\n\nThe size is: "

        << sample.size(); 
 

    cout << "\nThe bucket_count is: "

        << sample.bucket_count(); 
 

    cout << "\nThe load_factor is: "

        << sample.load_factor(); 
 

    sample.insert('z'); 
 

    cout << "\n\nThe size is: "

        << sample.size(); 
 

    cout << "\nThe bucket_count is: "

        << sample.bucket_count(); 
 

    cout << "\nThe load_factor is: "

        << sample.load_factor(); 

    return 0; 
} 

