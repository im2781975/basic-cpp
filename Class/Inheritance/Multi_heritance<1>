#include<iostream>
using namespace std;
 
class A
{
  int x;
public:
  A(int i) { x = i; }
  void print() { cout << x; }
};
 //B is derived from A using virtual inheritance (virtual public A). This ensures that if A is inherited multiple times through different paths, only one instance of A is created.
class B: virtual public A
{
public:
  B():A(10) {  }
};
 
class C:  virtual public A
{
public:
  C():A(10) {  }
};
 
class D: public B, public C {
public:
    void callPrint() {
        print();
    }
};
 
int main()
{
    D d;
    d.callPrint();
    return 0;
}

