#include <iostream>
using namespace std;
 
class Abstract {
    private:
    int a, b;
    public:
    //Abstract(int x,int y):a(x),b(y){}
    Abstract(){}
    Abstract(int x,int y)
    {
        
    }
    void set(int x, int y)
    {
        a = x;
        b = y;
    }
    // Copy constructor
    Abstract(const Abstract& p1)
    {
        a = p1.a;
        b = p1.b;
    }
    int getX() { return a; }
    int getY() { return b; }
    void display()
    {
        cout << "a = " << a << " b = " << b << "\n";
    }
};
 
int main()
{
    //Abstract obj(10,20);
    Abstract obj;
    obj.set(10, 20);
    obj.display();
    
    Abstract obj1= obj; 
 
    cout <<"obj1.x: "<<obj1.getX()
         <<",obj1.y = " << obj1.getY();
         cout<<"\n";
    cout << "obj.x: "<<obj.getX()
         << "obj.y: " <<obj.getY();
    return 0;
}
