#include <iostream>
using namespace std;

class Base {
    public:
    //for access x have to shift it to public part.
    int x;
    //pure virtual function is declared using the = 0 syntax, and it means that any class inheriting from Base must provide an implementation for the show() function. The Base class does not provide any implementation for show().
    virtual void fun() = 0;
    //int getX() { return x; }
};

class Derived : public Base
{
    int y;
    public:

    void fun() override{ cout << "\nfun() called"; }
};
int main(void)
{
    Derived d;
    d.x=5;
    //cout<<d.getX();
    cout<<d.x;
    d.fun();
    return 0;
}
