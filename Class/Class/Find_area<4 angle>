// area of shapes without virtual function
#include <iostream>
using namespace std;
 
class Shape {
    
    protected:
    int length, width;
    
    public:
    Shape(int l, int w)
    {
        length = l;
        width = w;
    }
    int get_Area()
    {
        return length*width;
    }
};

class Square : public Shape {
    public:
    Square(int l = 0, int w = 0)
        : Shape(l, w){}
        
    int get_Area()
    {
        return (length * width);
    }
};

class Rectangle : public Shape {
public:
    Rectangle(int l = 0, int w = 0)
        : Shape(l, w){}

    int get_Area()
    {
        return (length * width);
    }
};

int main()
{
    Shape* s;
 
    Square sq(5, 5);
    Rectangle rec(4, 5);
    
    s = &sq; 
    cout<<"\nArea of square: "<<s->get_Area();
    
    s = &rec;
    cout<<"\nArea of rectangle: "<<s->get_Area();
 
    return 0;
}
