#include <iostream>
#include <iterator>
#include <map>
using namespace std;

int main()
{
    multimap<int, int>mmp; 
    
    mmp.insert(pair<int, int>(1, 40));
    mmp.insert(pair<int, int>(2, 30));
    mmp.insert(pair<int, int>(3, 60));
    mmp.insert(pair<int, int>(6, 50));
    mmp.insert(pair<int, int>(6, 10));
 
    multimap<int, int>::iterator itr;
    cout << "The multimap mmp is : ";
    for (itr = mmp.begin(); itr != mmp.end(); ++itr) {
        cout << itr->first << "->" << itr->second <<"\n";
    }
 
    mmp.insert(pair<int, int>(4, 50));
    mmp.insert(pair<int, int>(5, 10));
 
    cout << "\nThe multimap mmp after adding extra elements is : ";
    for (itr =mmp.begin(); itr !=mmp.end(); ++itr) {
        cout << itr->first <<"->" << itr->second<< "\n";
    }
    // assigning the elements from gquiz1 to gquiz2
    multimap<int, int>mmp2(mmp.begin(), mmp.end());
 
    cout <<"\nThe multimap mmp2 after assign from mmp is : ";
    for (itr = mmp2.begin(); itr != mmp2.end(); ++itr) {
        cout << itr->first <<"->" << itr->second<<"\n";
    }
 
    // remove all elements up to
    // key with value 3 in mmp2
    cout << "\nmmp2 after removal of elements less than key=3 : ";
    mmp2.erase(mmp2.begin(), mmp2.find(3));
    for (itr = mmp2.begin(); itr != mmp2.end(); ++itr) {
        cout <<itr->first << "->" << itr->second << "\n";
    }
 
    //remove all elements with key = 4
    int num;
    num = mmp2.erase(4);
    cout << "\nmmp2.erase(4) : ";
    cout << num << " removed \n";
    for (itr = mmp2.begin(); itr != mmp2.end(); ++itr) {
        cout << itr->first <<"->" << itr->second <<"\n";
    }cout << " \n";
 
    // lower bound and upper bound
    cout<<"mmp.lower_bound(5): "<< mmp.lower_bound(5)->first <<"->"<< mmp.lower_bound(5)->second<< "\n";
         
    cout <<"mmp.upper_bound(5) : "<< mmp.upper_bound(5)->first  << mmp.upper_bound(5)->second
         << "\n";
    return 0;
}
