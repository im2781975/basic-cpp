// unordered_set::emplace(), bucket(),count();
#include <iostream>
#include <unordered_set>
 
using namespace std;
int main()
{
    unordered_set<int> sampleSet;
 
    sampleSet.emplace(5);
    sampleSet.emplace(10);
    sampleSet.emplace(15);
    sampleSet.emplace(20);
    sampleSet.emplace(25);
 
    cout <<"sampleSet contains: ";

    for (auto itr = sampleSet.begin(); itr != sampleSet.end(); itr++) {
        cout << *itr << " ";
    }
    cout<<"\nBucket search: ";
    for (auto itr = sampleSet.begin(); itr != sampleSet.end(); itr++) 
    { 
        cout <<"\nElement "<<(*itr) << " is present in the bucket: "<< sampleSet.bucket(*itr);
    }
    if (sampleSet.count(20) == 1)
        cout << "\nElement 20 is present in the set";
        
    else
        cout <<"\nElement 20 is'nt present in the set";
    
    return 0;
}
