#include <iostream>
#include <vector>
#include <algorithm>

int main() {
    std::vector<int> vec1{1, 2, 3, 4, 5, 6, 7};

    std::cout << "Vector is: ";
    for (int i = 0; i < vec1.size(); i++)
        std::cout << " " << vec1[i];

    // Rotate vector left 3 times.
    int rotL = 3;

    std::rotate(vec1.begin(), vec1.begin() + rotL, vec1.end());

    std::cout << "\nVector after rotation: ";
    for (int i = 0; i < vec1.size(); i++)
        std::cout << " " << vec1[i];

    std::vector<int> vec2{1, 2, 3, 4, 5, 6, 7, 8, 9};

    std::cout << "\nVec2[] is: ";
    for (int i = 0; i < vec2.size(); i++)
        std::cout << " " << vec2[i];

    // Rotate vector right 4 times.
    int rotR = 4;

    std::rotate(vec2.begin(), vec2.begin() + vec2.size() - rotR, vec2.end());

    std::cout << "\nNew vector after right rotation: ";
    for (int i = 0; i < vec2.size(); i++)
        std::cout << " " << vec2[i];

    // Use of rotate_copy
    std::vector<int> vec3(7);
    std::rotate_copy(vec1.begin(), vec1.begin() + 3, vec1.end(), vec3.begin());

    // Prints the content:
    std::cout << "\nvec3[] contains:";
    for (auto i = vec3.begin(); i != vec3.end(); i++)
        std::cout << ' ' << *i;
    return 0;
}

