// working of swap() & splice
#include <iostream>
#include <list>
using namespace std;

int main()
{
    list<int>qlist1 = {1, 2, 3, 4};
 
    list<int>qlist2 = { 2, 4, 6 };
 
    cout << "\nContents of  list before swapping are : ";
    for (int& x : qlist1)
        cout << x << " ";
        
    cout << "\nContents of 2nd list  before swapping are : ";
    for (int& x : qlist2)
        cout << x << " ";

    qlist1.swap(qlist2);
 
    cout << "\nContents of 1st list   after swapping are : ";
    for (int& x : qlist1)
        cout << x << " ";
 
    cout << "\nContents of 2nd list after swapping are : ";
    for (int& x : qlist2)
        cout << x << " ";
        
    list<int>::iterator it = qlist1.begin();
 
    // using advance() to increment iterator position
    advance(it, 3);
 
    cout << "\nlist1 before unique operation is : ";
    for (int& x : qlist1)
        cout << x << " ";
 
    // using unique() to remove repeating elements
    qlist1.unique();
 
    cout << "\nlist1 after unique operation is : ";
    for (int& x : qlist1)
        cout << x << " ";
 
    // using splice() to splice list2 in list1 at position
    // it inserts list2 after 2nd position
    qlist1.splice(it, qlist2);
 
    cout << "\nlist1 after splice operation is : ";
    for (int& x : qlist1)
        cout << x << " ";
 
    return 0;
}
