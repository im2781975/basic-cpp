#include <iostream>
#include <iterator>
#include <set>
using namespace std;
 
int main()
{
    set<int, greater<int> > s1;
 
    s1.insert(40);
    s1.insert(30);
    s1.insert(60);
    s1.insert(20);
    s1.insert(50);
    s1.insert(50);
    s1.insert(10);
 
    set<int, greater<int> >::iterator itr;
    cout << "The set s1 is : ";
    for (itr = s1.begin(); itr != s1.end(); itr++) {
        cout << *itr << " ";
    }
    cout << "\n";
 
    // assigning the elements from s1 to s2
    set<int> s2(s1.begin(), s1.end());
    cout << "The set s2 after assign from s1 is : ";
    for (itr = s2.begin(); itr != s2.end(); itr++) {
        cout << *itr << " ";
    }
    cout << "\n";
 
    // remove all elements up to 30 in s2
    cout<<"s2 after removal of elements less than 30:";
    s2.erase(s2.begin(), s2.find(30));
    for (itr = s2.begin(); itr != s2.end(); itr++) {
        cout << *itr << " ";
    }
    cout<<"\n";

    int num;
    num = s2.erase(50);
    cout <<"s2.erase(50) : ";
    cout << num << " removed\n";
    for (itr = s2.begin(); itr != s2.end(); itr++) {
        cout << *itr << " ";
    }
    cout << "\n";

    cout<<"s1.lower_bound(40) : "<< *s1.lower_bound(40)<< "\n";
    
    cout<<"s1.upper_bound(40) : "<< *s1.upper_bound(40) <<"\n";

    cout<<"s2.lower_bound(40) : "<< *s2.lower_bound(40) <<"\n";
    
    cout<<"s2.upper_bound(40) : "<< *s2.upper_bound(40) <<"\n";
 
    return 0;
}
