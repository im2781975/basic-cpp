#include<bits/stdc++.h>
using namespace std;
int main()
{
    string str = "geeksforgeeks";

    string::iterator it;
    string::reverse_iterator it1;
    cout<<"Str:"<<str<<"\n";
    
    cout << "String using forward iterators is : ";
    for (it = str.begin(); it != str.end(); it++){
        if(it == str.begin()) 
            *it='G';
        cout << *it;
    }

    cout <<"\nString using reverse iterators is : ";
    for (it1 = str.rbegin(); it1 != str.rend(); it1++){
        if(it1 == str.rbegin()) *it1='S';
        cout << *it1;
    }

  cout<<"\nString using constant forward iterator is :";
  for(auto it2 = str.cbegin(); it2!=str.cend(); it2++){
//if(it2 == str.cbegin()) *it2='G';
//In the case of constant iterator modification isn't possible.Only increament & decreament is possible.
        cout<<*it2;
  }
 
  cout<<"\nString using constant reverse iterator is :";
  for(auto it3 = str.crbegin(); it3!=str.crend(); it3++)
        cout<<*it3;
    
    return 0;
}
