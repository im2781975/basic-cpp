//without Bit Field size is: 4 Bytes
//with Bit Fields size is: 4 Bytes
#include<bits/stdc++.h>
using namespace std;
//Define a struct without bit fields
struct Loan1 {
    unsigned int principal ;
    unsigned int interestRate ;
    unsigned int period ;
};
// Define a struct with bit-fields
struct Loan2 {
// principal variable can store maximum value of 1,048,575
    unsigned int principal : 20;
    // Maximum interest rate of 63
    unsigned int interestRate : 6;
    // Maximum period of 63 months
    unsigned int period : 6;
};
int main()
{
    Loan2 loan;
    loan.principal = 500000;
    loan.interestRate = 15;
    loan.period = 36;
 //In this case, "principal" takes 20 bits, "interestRate" takes 6 bits, and "period" takes 6 bits.The total size is calculated as (20 bits + 6 bits + 6 bits) / 8 bits per byte = 4 bytes.
    cout << "without Bit Field size is: ";
    cout << sizeof(Loan1) << " Bytes" <<"\n";
    cout << "with Bit Fields size is: ";
    cout << sizeof(Loan2) << " Bytes" <<"\n";
}
