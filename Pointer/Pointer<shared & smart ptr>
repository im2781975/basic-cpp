#include <iostream>
#include <memory>
using namespace std;

class Rectangle {
    int length;
    int breadth;

public:
    Rectangle(int l, int b) : length(l), breadth(b) {}

    int area() { return length * breadth; }
};

int main() {
    unique_ptr<Rectangle> P1 = make_unique<Rectangle>(10, 5);
    cout << P1->area() << "\n";

    unique_ptr<Rectangle> P2;
    P2 = move(P1);

    cout << P2->area() << "\n";

    shared_ptr<Rectangle> P3 = P2;

    cout << "After shared ptr: " << P2->area() << "\n";

    cout << P2->area() << endl;

    // This'll also print 0 now, as P1 is now nullptr
    cout << (P1.get() == nullptr) << endl;

    // This'll print 2 as Reference Counter is 2
    cout << P3.use_count() << endl;

    return 0;
}

